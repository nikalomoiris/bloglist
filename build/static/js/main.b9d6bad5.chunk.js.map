{"version":3,"sources":["services/blogs.js","services/login.js","reducers/BlogReducer.js","components/Blog.js","components/LoginForm.js","components/Togglable.js","reducers/NotificationReducer.js","components/AddBlogForm.js","components/Notification.js","App.js","store.js","index.js"],"names":["token","services_blogs","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","console","log","post","_x","setToken","newToken","concat","update","_ref3","_callee3","id","_context3","put","_x2","_x3","deleteBlog","_ref4","_callee4","_context4","delete","_x4","services_login","login","credentials","addBlog","blog","dispatch","newBlog","blogsService","type","blogReducer","state","length","undefined","action","filter","oldBlog","find","b","_objectSpread","likes","map","mapDispatchToProps","like","connect","props","_useState","useState","_useState2","slicedToArray","visible","setVisible","showWhenVisible","display","hideWhenVisible","removeButtonVisibility","loggedUser","username","toggleVisibility","increaseLikes","event","preventDefault","user","author","title","url","t0","handleDelete","window","confirm","exception","react_default","createElement","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","onClick","LoginForm","handleLogin","handleUsernameChange","password","handlePasswordChange","Fragment","onSubmit","value","onChange","Togglable","React","forwardRef","ref","useImperativeHandle","buttonLabel","children","showError","message","notifType","hideNotification","notificationReducer","showInfo","blogs","setTitle","_useState3","_useState4","setAuthor","_useState5","_useState6","setUrl","blogFormRef","createRef","handleCreateBlog","current","setTimeout","components_Togglable","target","Notification","color","background","fontSize","borderStyle","borderRadius","padding","initializeBlogs","notificationMessage","notification","notificationType","setUser","setUsername","setPassword","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","_user2","loginService","setItem","stringify","components_Notification","components_LoginForm","name","clear","components_AddBlogForm","sort","Number","components_Blog","key","reducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","renderApp","ReactDOM","render","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.b9d6bad5.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/blogs';\n\nlet token = null;\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl);\n    return response.data;\n};\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token },\n    };\n    console.log(config);\n    const response = await axios\n        .post(baseUrl, newObject, config);\n    return response.data;\n};\n\nconst update = async (newObject, id) => {\n    const response = await axios.put(`${baseUrl}/${id}`, newObject);\n    return response.data;\n};\n\nconst deleteBlog = async (id) => {\n    const response = await axios.delete(`${baseUrl}/${id}`);\n    return response.data;\n};\n\nexport default {\n    getAll,\n    create,\n    setToken,\n    update,\n    deleteBlog\n};","import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials);\n    return response.data;\n};\n\nexport default { login };","import blogsService from \"../services/blogs\";\n\nexport const initializeBlogs = () => {\n    return async dispatch => {\n        const blogs = await blogsService.getAll()\n        dispatch({\n            type: 'INIT_BLOGS',\n            data: blogs\n        })\n    }\n}\n\nexport const addBlog = blog => {\n    return async dispatch => {\n        const newBlog = await blogsService.create(blog)\n        dispatch({\n            type: 'ADD_BLOG',\n            data: newBlog\n        })\n    }\n}\n\nexport const deleteBlog = id => {\n    return async dispatch => {\n        await blogsService.deleteBlog(id);\n        dispatch({\n            type: 'DELETE_BLOG',\n            data: { id }\n        })\n    }\n}\n\nexport const like = id => {\n    return {\n        type: 'ADD_LIKE',\n        data: { id }\n    }\n}\n\nconst blogReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'INIT_BLOGS':\n            return action.data\n        case 'ADD_BLOG':\n            return state.concat(action.data)\n        case 'DELETE_BLOG':\n            return state.filter(blog => blog.id !== action.data.id)\n        case 'ADD_LIKE':\n            const id = action.data.id\n            const oldBlog = state.find(b => b.id === id)\n            const newBlog = {\n                ...oldBlog,\n                likes: oldBlog.likes + 1\n            }\n            return state.map(blog =>\n                blog.id !== id ? blog : newBlog\n            )\n        default:\n            return state\n    }\n}\n\nexport default blogReducer","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport blogsService from '../services/blogs';\nimport { addBlog, deleteBlog, like } from '../reducers/BlogReducer'\n\nconst Blog = (props) => {\n    const blog = props.blog;\n\n    const blogStyle = {\n        paddingTop: 10,\n        paddingLeft: 2,\n        border: 'solid',\n        borderWidth: 1,\n        marginBottom: 5\n    };\n\n    const [visible, setVisible] = useState(false);\n\n    const showWhenVisible = { display: visible ? '' : 'none' };\n    const hideWhenVisible = { display: visible ? 'none' : '' };\n    const removeButtonVisibility = {\n        display: props.loggedUser === props.username ? '' : 'none'\n    };\n\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    };\n\n    const increaseLikes = async (event) => {\n        event.preventDefault();\n        try {\n            await blogsService\n                .update({\n                    user: blog.user.id,\n                    likes: ++blog.likes,\n                    author: blog.author,\n                    title: blog.title,\n                    url: blog.url\n                }, blog.id);\n            props.like(blog.likes);\n        } catch (exception) {\n            console.log('likes update failed');\n        }\n    };\n\n    const handleDelete = async (event) => {\n        event.preventDefault();\n        if (window.confirm(`remove blog ${blog.title} by ${blog.author}`)) {\n            try {\n                props.deleteBlog(blog.id)\n            } catch (exception) {\n                console.log('remove blog failed');\n            }\n        }\n    };\n\n    return (\n        <div style={blogStyle}>\n            <div className='title' onClick={toggleVisibility} style={hideWhenVisible}>\n                {blog.title} {blog.author}\n            </div>\n            <div style={showWhenVisible} className='blogDetails'>\n                <div onClick={toggleVisibility}>{blog.title} {blog.author}</div>\n                <div>{blog.url}</div>\n                <div>{blog.likes} likes <button onClick={increaseLikes}>like</button></div>\n                <div>added by {props.username}</div>\n                <button style={removeButtonVisibility} onClick={handleDelete}>remove</button>\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = {\n    addBlog,\n    deleteBlog,\n    like\n}\n\nexport default connect(null, mapDispatchToProps)(Blog);","import React from 'react';\n\nconst LoginForm = (\n    {\n        handleLogin,\n        username,\n        handleUsernameChange,\n        password,\n        handlePasswordChange\n    }\n) => {\n    return (\n        <>\n            <h2>Log in to application</h2>\n            <form onSubmit={handleLogin}>\n                <div>\n                    username: <input value={username} onChange={handleUsernameChange} />\n                </div>\n                <div>\n                    password: <input value={password} onChange={handlePasswordChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">login</button>\n                </div>\n            </form>\n        </>\n    );\n};\n\nexport default LoginForm;","import React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false);\n\n    const hideWhenVisible = { display: visible ? 'none' : '' };\n    const showWhenVisible = { display: visible ? '' : 'none' };\n\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    };\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        };\n    });\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button onClick={toggleVisibility}>cancel</button>\n            </div>\n        </div>\n    );\n});\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n};\n\nexport default Togglable;","export const showError = (message) => {\n    return {\n        type: 'SHOW_ERROR',\n        data: {\n            message,\n            notifType: 'error'\n        }\n    }\n}\n\nexport const showInfo = (message) => {\n    return {\n        type: 'SHOW_INFO',\n        data: {\n            message,\n            notifType: 'info'\n        }\n    }\n}\n\nexport const hideNotification = () => {\n    return {\n        type: 'HIDE',\n        data: {\n            message: 'none',\n            notifType: 'none'\n        }\n    }\n}\n\nconst notificationReducer = (state = {notifType: '', message: 'welcome'}, action) => {\n    switch (action.type) {\n        case 'SHOW_ERROR':\n            return action.data\n        case 'SHOW_INFO':\n            return action.data\n        case 'HIDE':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default notificationReducer","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Togglable from './Togglable';\nimport { showError, showInfo, hideNotification } from '../reducers/NotificationReducer'\nimport { addBlog } from '../reducers/BlogReducer'\n\nconst AddBlogForm = (props) => {\n    const [title, setTitle] = useState('');\n    const [author, setAuthor] = useState('');\n    const [url, setUrl] = useState('');\n\n    const blogFormRef = React.createRef();\n\n    const handleTitleChange = (event) => {\n        setTitle(event.target.value);\n    };\n\n    const handleAuthorChange = (event) => {\n        setAuthor(event.target.value);\n    };\n\n    const handleUrlChange = (event) => {\n        setUrl(event.target.value);\n    };\n\n    const handleCreateBlog = async (event) => {\n        event.preventDefault();\n        try {\n            blogFormRef.current.toggleVisibility();\n            props.addBlog({\n                title, author, url\n            });\n            props.showInfo(`a new blog ${title} ${author} added`)\n            setTimeout(() => {\n                props.hideNotification()\n            }, 5000);\n            setTitle('');\n            setAuthor('');\n            setUrl('');\n        } catch (exception) {\n            props.showError('error while adding a new blog')\n            console.log(exception);\n            setTimeout(() => {\n                props.hideNotification()\n            }, 5000);\n        }\n    };\n\n    return (\n        <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n            <h2>create new</h2>\n            <form onSubmit={handleCreateBlog}>\n                <div>\n                    title: <input value={title} onChange={handleTitleChange} />\n                </div>\n                <div>\n                    author: <input value={author} onChange={handleAuthorChange} />\n                </div>\n                <div>\n                    url: <input value={url} onChange={handleUrlChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">create</button>\n                </div>\n            </form>\n        </Togglable>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        blogs: state.blogs\n    }\n}\n\nconst mapDispatchToProps = {\n    showError,\n    showInfo,\n    hideNotification,\n    addBlog\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBlogForm);","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n    const error = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    };\n\n    const info = {\n        color: 'blue',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    };\n\n    if (message === 'none') {\n        return null;\n    }\n\n    if (type === 'error') {\n        return (\n            <div style={error}>\n                {message}\n            </div>\n        );\n    } else {\n        return (\n            <div style={info}>\n                {message}\n            </div>\n        );\n    }\n};\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport blogsService from './services/blogs';\nimport loginService from './services/login';\nimport Blog from './components/Blog';\nimport LoginForm from './components/LoginForm';\nimport AddBlogForm from './components/AddBlogForm';\nimport Notification from './components/Notification';\nimport { showError, hideNotification } from './reducers/NotificationReducer'\nimport { initializeBlogs } from './reducers/BlogReducer'\n\nfunction App(props) {\n\n    const [user, setUser] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    useEffect(() => {\n        props.initializeBlogs()\n    }, [])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON);\n            setUser(user);\n        }\n    }, []);\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        try {\n            const user = await loginService.login({\n                username, password\n            });\n\n            window.localStorage.setItem(\n                'loggedBlogappUser', JSON.stringify(user)\n            );\n\n            blogsService.setToken(user.token);\n            setUser(user);\n            setUsername('');\n            setPassword('');\n        } catch (exception) {\n            props.showError('Wrong password or username')\n           setTimeout(() => {\n                props.hideNotification()\n            }, 5000);\n        }\n    };\n\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    };\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    };\n\n    const handleLogout = () => {\n        setUser('');\n        window.localStorage.clear();\n    };\n\n    if (user === '') {\n        return (\n            <div className=\"App\">\n                <Notification message={props.notificationMessage} type={props.notificationType} />\n                <header className=\"App-header\">\n                    <h1>Bloglist App</h1>\n                </header>\n                <LoginForm handleLogin={handleLogin}\n                    username={username}\n                    handleUsernameChange={handleUsernameChange}\n                    password={password}\n                    handlePasswordChange={handlePasswordChange} />\n            </div>\n        );\n    }\n    return (\n        <div className=\"App\">\n            <Notification message={props.notificationMessage} type={props.notificationType} />\n            <header className=\"App-header\">\n                <h1>Bloglist App</h1>\n            </header>\n            <h2>Blogs</h2>\n            <div>\n                <h3>{user.name} is logged in</h3>\n            </div>\n            <div>\n                <button onClick={handleLogout}>Logout</button>\n            </div>\n            <AddBlogForm />\n            {props.blogs\n                .sort((a, b) => Number(b.likes) - Number(a.likes))\n                .map(blog => <Blog key={blog.id}\n                    blog={blog}\n                    username={blog.user.username}\n                    loggedUser={user.username}/>)}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        notificationMessage: state.notification.message,\n        notificationType: state.notification.notifType,\n        blogs: state.blogs\n    }\n}\n\nconst mapDispatchToProps = {\n    initializeBlogs, showError, hideNotification\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport notificationReducer from './reducers/NotificationReducer'\nimport blogReducer from './reducers/BlogReducer'\n\nconst reducer = combineReducers({\n    blogs: blogReducer,\n    notification: notificationReducer\n})\n\nconst store = createStore(\n    reducer,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport store from './store';\n\nconst renderApp = () => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\nrenderApp()\nstore.subscribe(renderApp)"],"sourceRoot":""}