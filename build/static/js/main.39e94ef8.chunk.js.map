{"version":3,"sources":["services/login.js","reducers/NotificationReducer.js","services/blogs.js","services/users.js","reducers/UserReducer.js","components/LoginForm.js","components/Notification.js","components/Togglable.js","reducers/BlogReducer.js","components/AddBlogForm.js","components/Blog.js","components/BlogList.js","components/UsersList.js","components/User.js","components/BlogDetails.js","App.js","store.js","index.js"],"names":["services_login","login","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","credentials","response","wrap","_context","prev","next","axios","post","sent","abrupt","data","stop","_x","apply","this","arguments","showError","message","type","notifType","showInfo","hideNotification","notificationReducer","state","length","undefined","action","token","services_blogs","getAll","get","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","setToken","newToken","concat","update","_ref3","_callee3","id","_context3","put","_x2","_x3","deleteBlog","_ref4","_callee4","_context4","delete","_x4","services_users","user","userReducer","allUsers","loggedUserJSON","window","localStorage","getItem","JSON","parse","objectSpread2","setItem","stringify","blogService","clear","mapDispatchToProps","withRouter","connect","props","_useState","useState","_useState2","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","event","preventDefault","loginService","history","push","t0","setTimeout","react_default","createElement","Fragment","Form","onSubmit","Group","controlId","Label","Control","value","onChange","target","placeholder","Button","variant","Notification","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","buttonLabel","children","addBlog","blog","dispatch","newBlog","blogsService","blogReducer","filter","map","blogToSave","blogs","title","setTitle","author","setAuthor","_useState5","_useState6","url","setUrl","blogFormRef","createRef","handleCreateBlog","current","exception","console","log","components_Togglable","react_router_dom","className","to","users","components_AddBlogForm","ListGroup","sort","b","Number","likes","Item","components_Blog","key","loggedUser","Table","striped","bordered","hover","size","name","getUserBlogsNumber","Accordion","Card","Header","Toggle","as","eventKey","Collapse","Body","like","removeButtonVisibility","increaseLikes","handleDelete","confirm","Title","Text","initializeBlogs","isLoggedIn","logout","getAllUsers","usersService","notificationMessage","notification","notificationType","useEffect","blogById","find","components_Notification","Navbar","bg","expand","sticky","Brand","aria-controls","Nav","react_router","exact","path","render","components_LoginForm","components_BlogList","components_UsersList","match","components_User","params","components_BlogDetails","reducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","renderApp","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.39e94ef8.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials);\n    return response.data;\n};\n\nexport default { login };","export const showError = (message) => {\n    return {\n        type: 'SHOW_ERROR',\n        data: {\n            message,\n            notifType: 'error'\n        }\n    }\n}\n\nexport const showInfo = (message) => {\n    return {\n        type: 'SHOW_INFO',\n        data: {\n            message,\n            notifType: 'info'\n        }\n    }\n}\n\nexport const hideNotification = () => {\n    return {\n        type: 'HIDE',\n        data: {\n            message: 'none',\n            notifType: 'none'\n        }\n    }\n}\n\nconst notificationReducer = (state = {notifType: '', message: 'welcome'}, action) => {\n    switch (action.type) {\n        case 'SHOW_ERROR':\n            return action.data\n        case 'SHOW_INFO':\n            return action.data\n        case 'HIDE':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default notificationReducer","import axios from 'axios';\nconst baseUrl = '/api/blogs';\n\nlet token = null;\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl);\n    return response.data;\n};\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token },\n    };\n    const response = await axios\n        .post(baseUrl, newObject, config);\n    return response.data;\n};\n\nconst update = async (newObject, id) => {\n    const response = await axios.put(`${baseUrl}/${id}`, newObject);\n    return response.data;\n};\n\nconst deleteBlog = async (id) => {\n    const response = await axios.delete(`${baseUrl}/${id}`);\n    return response.data;\n};\n\nexport default {\n    getAll,\n    create,\n    setToken,\n    update,\n    deleteBlog\n};","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nexport default {\n    getAll\n}","import blogService from '../services/blogs'\nimport usersService from '../services/users'\n\nexport const isLoggedIn = () => {\n    return {\n        type: 'IS_LOGGED_IN'\n    }\n}\n\nexport const login = (user) => {\n    return {\n        type: 'LOGIN',\n        data: user\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: 'LOGOUT'\n    }\n}\n\nexport const getAllUsers = () => {\n    return async dispatch => {\n        const users = await usersService.getAll()\n        dispatch ({\n            type: 'GET_ALL_USERS',\n            data: { allUsers: users }\n        })\n    }\n}\n\nconst userReducer = (state = {user: '', allUsers: []}, action) => {\n    switch (action.type) {\n        case 'IS_LOGGED_IN':\n            const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n            if (loggedUserJSON) {\n                const user = JSON.parse(loggedUserJSON);\n                return {\n                    ...state,\n                    user\n                }\n            }\n            return {\n                ...state,\n                user: ''\n            }\n        case 'LOGIN':\n            const user = action.data\n            window.localStorage.setItem(\n                'loggedBlogappUser', JSON.stringify(user)\n            );\n\n            blogService.setToken(user.token);\n            return {\n                ...state,\n                user\n            }\n        case 'LOGOUT':\n            window.localStorage.clear();\n            return {\n                ...state,\n                user: ''\n            }\n        case 'GET_ALL_USERS':\n            return {\n                ...state,\n                allUsers: action.data.allUsers\n            }\n        default:\n            return state\n    }\n}\n\nexport default userReducer","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport loginService from '../services/login';\nimport { showError, hideNotification } from '../reducers/NotificationReducer'\nimport { login } from '../reducers/UserReducer'\n\nconst LoginForm = (props) => {\n    // TODO Transfer the state to Redux\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        try {\n            const user = await loginService.login({\n                username, password\n            });\n\n            props.login(user)\n            setUsername('');\n            setPassword('');\n            props.history.push('/blogs')\n        } catch (exception) {\n            props.showError('Wrong password or username')\n           setTimeout(() => {\n                props.hideNotification()\n            }, 5000);\n        }\n    };\n\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    };\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    };\n\n    return (\n        <>\n            <h2>Log in to application</h2>\n            <Form onSubmit={handleLogin}>\n                <Form.Group controlId=\"formUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\"\n                        value={username} onChange={handleUsernameChange}\n                        placeholder=\"Enter username\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\"\n                        value={password} onChange={handlePasswordChange}\n                        placeholder=\"Password\" />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Login\n                </Button>\n            </Form>\n        </>\n    );\n};\n\nconst mapDispatchToProps = {\n    showError,\n    hideNotification,\n    login\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(LoginForm));","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n    const error = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    };\n\n    const info = {\n        color: 'blue',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    };\n\n    if (message === 'none') {\n        return null;\n    }\n\n    if (type === 'error') {\n        return (\n            <div style={error}>\n                {message}\n            </div>\n        );\n    } else {\n        return (\n            <div style={info}>\n                {message}\n            </div>\n        );\n    }\n};\n\nexport default Notification;","import React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button'\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const padding = {padding: 5}\n\n    const [visible, setVisible] = useState(false);\n\n    const hideWhenVisible = { display: visible ? 'none' : '' };\n    const showWhenVisible = { display: visible ? '' : 'none' };\n\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    };\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        };\n    });\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <Button variant=\"success\"\n                    onClick={toggleVisibility}>\n                    {props.buttonLabel}\n                </Button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <Button style={padding} variant=\"secondary\" onClick={toggleVisibility}>cancel</Button>\n            </div>\n        </div>\n    );\n});\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n};\n\nexport default Togglable;","import blogsService from \"../services/blogs\";\n\nexport const initializeBlogs = () => {\n    return async dispatch => {\n        const blogs = await blogsService.getAll()\n        dispatch({\n            type: 'INIT_BLOGS',\n            data: blogs\n        })\n    }\n}\n\nexport const addBlog = blog => {\n    return async dispatch => {\n        const newBlog = await blogsService.create(blog)\n        dispatch({\n            type: 'ADD_BLOG',\n            data: newBlog\n        })\n    }\n}\n\nexport const deleteBlog = id => {\n    return async dispatch => {\n        await blogsService.deleteBlog(id);\n        dispatch({\n            type: 'DELETE_BLOG',\n            data: { id }\n        })\n    }\n}\n\nexport const like = (newBlog, id) => {\n    return async dispatch => {\n        const blogToSave = await blogsService.update(newBlog, id)\n        dispatch({\n            type: 'ADD_LIKE',\n            data: {\n                blogToSave,\n                id\n            }\n        })\n    }\n}\n\nconst blogReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'INIT_BLOGS':\n            return action.data\n        case 'ADD_BLOG':\n            return state.concat(action.data)\n        case 'DELETE_BLOG':\n            return state.filter(blog => blog.id !== action.data.id)\n        case 'ADD_LIKE':\n            return state.map(blog =>\n                blog.id !== action.data.id ? blog : action.data.blogToSave\n            )\n        default:\n            return state\n    }\n}\n\nexport default blogReducer","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport Togglable from './Togglable';\nimport { showError, showInfo, hideNotification } from '../reducers/NotificationReducer'\nimport { addBlog } from '../reducers/BlogReducer'\n\nconst AddBlogForm = (props) => {\n    const [title, setTitle] = useState('');\n    const [author, setAuthor] = useState('');\n    const [url, setUrl] = useState('');\n\n    const blogFormRef = React.createRef();\n\n    const handleTitleChange = (event) => {\n        setTitle(event.target.value);\n    };\n\n    const handleAuthorChange = (event) => {\n        setAuthor(event.target.value);\n    };\n\n    const handleUrlChange = (event) => {\n        setUrl(event.target.value);\n    };\n\n    const handleCreateBlog = async (event) => {\n        event.preventDefault();\n        try {\n            blogFormRef.current.toggleVisibility();\n            props.addBlog({\n                title, author, url\n            });\n            props.showInfo(`a new blog ${title} ${author} added`)\n            setTimeout(() => {\n                props.hideNotification()\n            }, 5000);\n            setTitle('');\n            setAuthor('');\n            setUrl('');\n        } catch (exception) {\n            props.showError('error while adding a new blog')\n            console.log(exception);\n            setTimeout(() => {\n                props.hideNotification()\n            }, 5000);\n        }\n    };\n\n    return (\n        <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n            <h2>create new</h2>\n            <Form onSubmit={handleCreateBlog}>\n                <Form.Group controlId=\"formBlogTitle\">\n                    <Form.Label>Blog title</Form.Label>\n                    <Form.Control type=\"text\"\n                        value={title} onChange={handleTitleChange}\n                        placeholder=\"Enter blog title\" />\n                </Form.Group>\n                {/* <div>\n                    title: <input value={title} onChange={handleTitleChange} />\n                </div> */}\n                <Form.Group controlId=\"formBlogAthor\">\n                    <Form.Label>Blog author</Form.Label>\n                    <Form.Control type=\"text\"\n                        value={author} onChange={handleAuthorChange}\n                        placeholder=\"Enter blog author\" />\n                </Form.Group>\n                {/* <div>\n                    author: <input value={author} onChange={handleAuthorChange} />\n                </div> */}\n                <Form.Group controlId=\"formBlogUrl\">\n                    <Form.Label>Blog url</Form.Label>\n                    <Form.Control type=\"text\"\n                        value={url} onChange={handleUrlChange}\n                        placeholder=\"Enter blog url\" />\n                </Form.Group>\n                {/* <div>\n                    url: <input value={url} onChange={handleUrlChange} />\n                </div> */}\n                <Button variant=\"primary\" type=\"submit\">\n                    Add\n                </Button>\n            </Form>\n        </Togglable>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        blogs: state.blogs\n    }\n}\n\nconst mapDispatchToProps = {\n    showError,\n    showInfo,\n    hideNotification,\n    addBlog\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBlogForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\n\nconst Blog = (props) => {\n    const blog = props.blog;\n\n    return (\n        <Link className='title' to={`/blogs/${blog.id}`}>\n            {blog.title} by {blog.author}\n        </Link>\n    );\n};\n\nexport default connect()(Blog);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nimport AddBlogForm from './AddBlogForm'\nimport Blog from './Blog'\n\nconst BlogList = (props) => {\n    return (\n        <>\n            <AddBlogForm />\n            <ListGroup>\n                {props.blogs\n                    .sort((a, b) => Number(b.likes) - Number(a.likes))\n                    .map(blog =>\n                        <ListGroup.Item>\n                            <Blog key={blog.id}\n                                blog={blog}\n                                username={blog.user.username}\n                                loggedUser={props.user.username} />\n                        </ListGroup.Item>)}\n            </ListGroup>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        blogs: state.blogs,\n        user: state.users.user\n    }\n}\n\nexport default connect(mapStateToProps)(BlogList)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport Table from 'react-bootstrap/Table'\n\nconst UsersList = (props) => {\n    const getUserBlogsNumber = (user) => {\n        return user.blogs.length\n    }\n\n    return (\n        <>\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>User</th>\n                        <th>Blogs created</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.users.map(user =>\n                        <tr key={user.id}>\n                            <td>\n                                <Link to={`/users/${user.id}`}>\n                                    {user.name}\n                                </Link>\n                            </td>\n                            <td>\n                                {getUserBlogsNumber(user)}\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </Table>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users.allUsers\n    }\n}\n\nexport default connect(mapStateToProps)(UsersList)","import React from 'react'\nimport { connect } from 'react-redux'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nconst User = (props) => {\n    if (props.user === undefined) {\n        return null\n    }\n    const blogs = props.user.blogs\n    const name = props.user.name\n    return (\n        <>\n            <h2>{name}</h2>\n\n            <Accordion>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"light\" eventKey=\"0\">\n                            Added blogs\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                        <ListGroup variant='flush'>\n                            {blogs.map(blog =>\n                                <ListGroup.Item key={blog.id}>{blog.title}</ListGroup.Item>)}\n                        </ListGroup>\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </>\n    )\n}\n\nexport default connect()(User)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nimport { addBlog, deleteBlog, like } from '../reducers/BlogReducer'\n\nconst BlogDetails = (props) => {\n    const blog = props.blog\n    const username = blog.user.username\n    const loggedUser = props.user.username\n\n    const removeButtonVisibility = {\n        display: loggedUser === username ? '' : 'none'\n    };\n\n    const increaseLikes = async (event) => {\n        event.preventDefault();\n        try {\n            props.like({\n                user: blog.user.id,\n                likes: ++blog.likes,\n                author: blog.author,\n                title: blog.title,\n                url: blog.url\n            }, blog.id);\n        } catch (exception) {\n            console.log('likes update failed ', exception);\n        }\n    };\n\n    const handleDelete = async (event) => {\n        event.preventDefault();\n        if (window.confirm(`remove blog ${blog.title} by ${blog.author}`)) {\n            try {\n                props.deleteBlog(blog.id)\n            } catch (exception) {\n                console.log('remove blog failed');\n            }\n        }\n    };\n\n    return (\n        <Card className='blogDetails'>\n            <Card.Body>\n                <Card.Title>{blog.title} by {blog.author}</Card.Title>\n                <Card.Text>\n                    <div>{blog.url}</div>\n                    <div>\n                        {blog.likes} likes\n                        <Button variant=\"success\"\n                            size='sm'\n                            onClick={increaseLikes}>like\n                        </Button>\n                    </div>\n                    <div>added by {username}</div>\n                </Card.Text>\n                <Button variant=\"danger\"\n                    size='sm'\n                    style={removeButtonVisibility}\n                    onClick={handleDelete}>Delete</Button>\n            </Card.Body>\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.users.user\n    }\n}\n\nconst mapDispatchToProps = {\n    addBlog,\n    deleteBlog,\n    like\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogDetails)","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Route, NavLink, Redirect\n} from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\n\n\nimport LoginForm from './components/LoginForm';\nimport Notification from './components/Notification';\nimport BlogList from './components/BlogList'\nimport UsersList from './components/UsersList'\nimport User from './components/User'\nimport BlogDetails from './components/BlogDetails'\nimport { showInfo, showError, hideNotification } from './reducers/NotificationReducer'\nimport { initializeBlogs } from './reducers/BlogReducer'\nimport { isLoggedIn, login, logout, getAllUsers } from './reducers/UserReducer'\n\nfunction App(props) {\n    const padding = {padding: 5}\n\n    useEffect(() => {\n        props.showInfo(`Welcome to the bloglist app`)\n            setTimeout(() => {\n                props.hideNotification()\n            }, 5000);\n        props.initializeBlogs()\n        props.isLoggedIn()\n    }, [])\n\n    useEffect(() => {\n        props.getAllUsers()\n    }, [props.blogs])\n\n    const handleLogout = () => {\n        props.logout()\n    };\n\n    const userById = (id) => {\n        return props.users.find(user => user.id === id)\n    }\n\n    const blogById = (id) => {\n        return props.blogs.find(blog => blog.id === id)\n    }\n\n    return (\n        <div className=\"App\">\n            <Notification message={props.notificationMessage}\n                type={props.notificationType} />\n            <Router>\n                <div>\n                    <Navbar bg=\"light\"\n                        expand=\"lg\"\n                        sticky='top'>\n                        <Navbar.Brand to=\"/blogs\">Bloglist App</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"mr-auto\">\n                                <Navbar.Text>\n                                    <NavLink style={padding} to='/blogs'>blogs</NavLink>\n                                </Navbar.Text>\n                                <Navbar.Text>\n                                    <NavLink style={padding} to='/users'>users</NavLink>\n                                </Navbar.Text>\n                            </Nav>\n                        </Navbar.Collapse>\n                        <Navbar.Collapse className=\"justify-content-end\">\n                            {props.user\n                                ?<Navbar.Text>\n                                    {props.user.name}\n                                    <Button style={padding} variant=\"danger\"\n                                        size='sm'\n                                        onClick={handleLogout}>\n                                        Logout\n                                    </Button>\n                                </Navbar.Text>\n                                : <Navbar.Text>\n                                    <NavLink style={padding} to='/login'>login</NavLink>\n                                    <Redirect to=\"/login\" />\n                                </Navbar.Text>\n                            }\n                        </Navbar.Collapse>\n                    </Navbar>\n                    <Route exact path='/login' render={() => <LoginForm />} />\n                    <Route exact path='/blogs' render={() => <BlogList />} />\n                    <Route exact path='/users' render={() => <UsersList />} />\n                    <Route exact path='/users/:id' render={({ match }) =>\n                        <User user={userById(match.params.id)} />\n                    } />\n                    <Route exact path='/blogs/:id' render={({ match }) =>\n                        blogById(match.params.id) ?\n                            <BlogDetails blog={blogById(match.params.id)} />\n                            : <Redirect to=\"/blogs\" />\n\n                    } />\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        notificationMessage: state.notification.message,\n        notificationType: state.notification.notifType,\n        blogs: state.blogs,\n        user: state.users.user,\n        users: state.users.allUsers\n    }\n}\n\nconst mapDispatchToProps = {\n    initializeBlogs,\n    showError,\n    showInfo,\n    hideNotification,\n    isLoggedIn,\n    login,\n    logout,\n    getAllUsers\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport notificationReducer from './reducers/NotificationReducer'\nimport blogReducer from './reducers/BlogReducer'\nimport userReducer from './reducers/UserReducer'\n\nconst reducer = combineReducers({\n    blogs: blogReducer,\n    notification: notificationReducer,\n    users: userReducer\n})\n\nconst store = createStore(\n    reducer,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport store from './store';\n\nconst renderApp = () => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\nrenderApp()\nstore.subscribe(renderApp)"],"sourceRoot":""}