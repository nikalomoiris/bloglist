{"version":3,"sources":["services/blogs.js","services/login.js","components/Blog.js","components/LoginForm.js","components/Togglable.js","components/AddBlogForm.js","components/Notification.js","App.js","index.js"],"names":["token","services_blogs","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","console","log","post","_x","setToken","newToken","concat","update","_ref3","_callee3","id","_context3","put","_x2","_x3","deleteBlog","_ref4","_callee4","_context4","delete","_x4","services_login","login","credentials","Blog","blogs","setBlogs","blogId","title","author","url","likes","username","userId","loggedUser","_useState","useState","_useState2","slicedToArray","blogLikes","setBlogLikes","_useState3","_useState4","visible","setVisible","showWhenVisible","display","hideWhenVisible","removeButtonVisibility","toggleVisibility","increaseLikes","event","preventDefault","blogsService","user","t0","handleDelete","window","confirm","filter","blog","react_default","createElement","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","onClick","LoginForm","handleLogin","handleUsernameChange","password","handlePasswordChange","Fragment","onSubmit","value","onChange","type","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","AddBlogForm","setNotificationMessage","setNotifType","setTitle","setAuthor","_useState5","_useState6","setUrl","blogFormRef","createRef","handleCreateBlog","returnedBlog","current","setTimeout","components_Togglable","target","Notification","message","color","background","fontSize","borderStyle","borderRadius","padding","App","setUser","setUsername","_useState7","_useState8","setPassword","_useState9","_useState10","notificationMessage","_useState11","_useState12","notifType","useEffect","_fetchBlogs","initialBlogs","fetchBlogs","loggedUserJSON","localStorage","getItem","JSON","parse","_user2","loginService","setItem","stringify","components_Notification","components_LoginForm","name","clear","components_AddBlogForm","sort","b","Number","map","components_Blog","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6c2df1b7.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/blogs';\n\nlet token = null;\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl);\n    return response.data;\n};\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token },\n    };\n    console.log(config);\n    const response = await axios\n        .post(baseUrl, newObject, config);\n    return response.data;\n};\n\nconst update = async (newObject, id) => {\n    const response = await axios.put(`${baseUrl}/${id}`, newObject);\n    return response.data;\n};\n\nconst deleteBlog = async (id) => {\n    const response = await axios.delete(`${baseUrl}/${id}`);\n    return response.data;\n};\n\nexport default {\n    getAll,\n    create,\n    setToken,\n    update,\n    deleteBlog\n};","import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials);\n    return response.data;\n};\n\nexport default { login };","import React, { useState } from 'react';\nimport blogsService from '../services/blogs';\n\nconst Blog = ({ blogs,\n    setBlogs,\n    blogId,\n    title,\n    author,\n    url,\n    likes,\n    username,\n    userId,\n    loggedUser }) => {\n    const blogStyle = {\n        paddingTop: 10,\n        paddingLeft: 2,\n        border: 'solid',\n        borderWidth: 1,\n        marginBottom: 5\n    };\n\n    const [blogLikes, setBlogLikes] = useState(likes);\n    const [visible, setVisible] = useState(false);\n\n    const showWhenVisible = { display: visible ? '' : 'none' };\n    const hideWhenVisible = { display: visible ? 'none' : '' };\n    const removeButtonVisibility = {\n        display: loggedUser === username ? '' : 'none'\n    };\n\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    };\n\n    const increaseLikes = async (event) => {\n        event.preventDefault();\n        try {\n            await blogsService\n                .update({\n                    user: userId,\n                    likes: ++likes,\n                    author,\n                    title,\n                    url\n                }, blogId);\n            setBlogLikes(likes);\n        } catch (exception) {\n            console.log('likes update failed');\n        }\n    };\n\n    const handleDelete = async (event) => {\n        event.preventDefault();\n        if (window.confirm(`remove blog ${title} by ${author}`)) {\n            try {\n                await blogsService.deleteBlog(blogId);\n                setBlogs(blogs.filter(blog => blog.id !== blogId));\n            } catch (exception) {\n                console.log('remove blog failed');\n            }\n        }\n    };\n\n    return (\n        <div style={blogStyle}>\n            <div className='title' onClick={toggleVisibility} style={hideWhenVisible}>\n                {title} {author}\n            </div>\n            <div style={showWhenVisible} className='blogDetails'>\n                <div onClick={toggleVisibility}>{title} {author}</div>\n                <div>{url}</div>\n                <div>{blogLikes} likes <button onClick={increaseLikes}>like</button></div>\n                <div>added by {username}</div>\n                <button style={removeButtonVisibility} onClick={handleDelete}>remove</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Blog;","import React from 'react';\n\nconst LoginForm = (\n    {\n        handleLogin,\n        username,\n        handleUsernameChange,\n        password,\n        handlePasswordChange\n    }\n) => {\n    return (\n        <>\n            <h2>Log in to application</h2>\n            <form onSubmit={handleLogin}>\n                <div>\n                    username: <input value={username} onChange={handleUsernameChange} />\n                </div>\n                <div>\n                    password: <input value={password} onChange={handlePasswordChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">login</button>\n                </div>\n            </form>\n        </>\n    );\n};\n\nexport default LoginForm;","import React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false);\n\n    const hideWhenVisible = { display: visible ? 'none' : '' };\n    const showWhenVisible = { display: visible ? '' : 'none' };\n\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    };\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        };\n    });\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button onClick={toggleVisibility}>cancel</button>\n            </div>\n        </div>\n    );\n});\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n};\n\nexport default Togglable;","import React, { useState } from 'react';\nimport blogsService from '../services/blogs';\nimport Togglable from './Togglable';\n\nconst AddBlogForm = ({ setNotificationMessage,\n    setNotifType,\n    blogs,\n    setBlogs }) => {\n    const [title, setTitle] = useState('');\n    const [author, setAuthor] = useState('');\n    const [url, setUrl] = useState('');\n\n    const blogFormRef = React.createRef();\n\n    const handleTitleChange = (event) => {\n        setTitle(event.target.value);\n    };\n\n    const handleAuthorChange = (event) => {\n        setAuthor(event.target.value);\n    };\n\n    const handleUrlChange = (event) => {\n        setUrl(event.target.value);\n    };\n\n    const handleCreateBlog = async (event) => {\n        event.preventDefault();\n        try {\n            blogFormRef.current.toggleVisibility();\n            const returnedBlog = await blogsService\n                .create({\n                    title, author, url\n                });\n            setBlogs(blogs.concat(returnedBlog));\n            setNotificationMessage(`a new blog ${title} ${author} added`);\n            setNotifType('info');\n            setTimeout(() => {\n                setNotificationMessage(null);\n                setNotifType(null);\n            }, 5000);\n            setTitle('');\n            setAuthor('');\n            setUrl('');\n        } catch (exception) {\n            setNotificationMessage('error while adding a new blog');\n            setNotifType('error');\n            console.log(exception);\n            setTimeout(() => {\n                setNotificationMessage(null);\n                setNotifType(null);\n            }, 5000);\n        }\n    };\n\n    return (\n        <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n            <h2>create new</h2>\n            <form onSubmit={handleCreateBlog}>\n                <div>\n                    title: <input value={title} onChange={handleTitleChange} />\n                </div>\n                <div>\n                    author: <input value={author} onChange={handleAuthorChange} />\n                </div>\n                <div>\n                    url: <input value={url} onChange={handleUrlChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">create</button>\n                </div>\n            </form>\n        </Togglable>\n    );\n};\n\nexport default AddBlogForm;","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n    const error = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    };\n\n    const info = {\n        color: 'blue',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    };\n\n    if (message === null) {\n        return null;\n    }\n\n    if (type === 'error') {\n        return (\n            <div style={error}>\n                {message}\n            </div>\n        );\n    } else {\n        return (\n            <div style={info}>\n                {message}\n            </div>\n        );\n    }\n};\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport blogsService from './services/blogs';\nimport loginService from './services/login';\nimport Blog from './components/Blog';\nimport LoginForm from './components/LoginForm';\nimport AddBlogForm from './components/AddBlogForm';\nimport Notification from './components/Notification';\n\nfunction App() {\n    const [user, setUser] = useState('');\n    const [blogs, setBlogs] = useState([]);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [notificationMessage, setNotificationMessage] = useState(null);\n    const [notifType, setNotifType] = useState('');\n\n    useEffect(() => {\n        async function fetchBlogs() {\n            const initialBlogs = await blogsService.getAll();\n            setBlogs(initialBlogs);\n        }\n        fetchBlogs();\n    }, []);\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON);\n            setUser(user);\n        }\n    }, []);\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        try {\n            const user = await loginService.login({\n                username, password\n            });\n\n            window.localStorage.setItem(\n                'loggedBlogappUser', JSON.stringify(user)\n            );\n\n            blogsService.setToken(user.token);\n            setUser(user);\n            setUsername('');\n            setPassword('');\n        } catch (exception) {\n            setNotificationMessage('Wrong password or username');\n            setNotifType('error');\n            setTimeout(() => {\n                setNotificationMessage(null);\n                setNotifType(null);\n            }, 5000);\n        }\n    };\n\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    };\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    };\n\n    const handleLogout = () => {\n        setUser('');\n        window.localStorage.clear();\n    };\n\n    if (user === '') {\n        return (\n            <div className=\"App\">\n                <Notification message={notificationMessage} type={notifType} />\n                <header className=\"App-header\">\n                    <h1>Bloglist App</h1>\n                </header>\n                <LoginForm handleLogin={handleLogin}\n                    username={username}\n                    handleUsernameChange={handleUsernameChange}\n                    password={password}\n                    handlePasswordChange={handlePasswordChange} />\n            </div>\n        );\n    }\n    return (\n        <div className=\"App\">\n            <Notification message={notificationMessage} type={notifType} />\n            <header className=\"App-header\">\n                <h1>Bloglist App</h1>\n            </header>\n            <h2>Blogs</h2>\n            <div>\n                <h3>{user.name} is logged in</h3>\n            </div>\n            <div>\n                <button onClick={handleLogout}>Logout</button>\n            </div>\n            <AddBlogForm setNotificationMessage={setNotificationMessage}\n                setNotifType={setNotifType}\n                blogs={blogs}\n                setBlogs={setBlogs}/>\n            {blogs\n                .sort((a, b) => Number(b.likes) - Number(a.likes))\n                .map(blog => <Blog key={blog.id}\n                    blogs={blogs}\n                    setBlogs={setBlogs}\n                    blogId={blog.id}\n                    title={blog.title}\n                    author={blog.author}\n                    url={blog.url}\n                    likes={blog.likes}\n                    username={blog.user.username}\n                    userId={blog.user.id}\n                    loggedUser={user.username}/>)}\n        </div>\n    );\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}